INSTANCEMETHODS::

subsection:: Cycle
Browse Math/Cycle

Cycle includes the methods link::Classes/Array#-campanology::, link::Classes/Array#-circPerm::, link::Classes/Array#-interlace::, link::Classes/Array#-kaprekar::, link::Classes/Array#-kreuzspiel::, link::Classes/Array#-pea::, link::Classes/Array#-sieve::, link::Classes/Array#-symGroup::, link::Classes/Array#-symPerm::, link::Classes/Integer#-campanology::, link::Classes/Integer#-circPerm::, link::Classes/Integer#-collatz::, link::Classes/Integer#-euclidean::, link::Classes/Integer#-kaprekar::, link::Classes/Integer#-pea::, link::Classes/Number#-lorenz::, link::Classes/Env#*collatz::.

method:: lorenz
In 1970, Birman, Guckenheimer, and Williams propose a model of dynamic discretization of Lorenz attractors, characterized by the periodicity of the orbits by a return to a point already crossed as a cycle.

Let i be an element in the interval [0, 1] and I the set of points ordered in time calculated from i to t0, each point at t+1 is calculated as follows:

i(t+1) = 2i(t) if i(t) < 1;

i(t+1) = 2i(t)-1 if i(t) > 1;

until i(tn+1) is element of I.

Reference at https://www.chaos-math.org/en/chaos-vii-strange-attractors.html

argument:: n
round to multiple of n.

returns:: the cycle itself prepended by its 'path' if it exists.

discussion::
code::
0.27.lorenz;
0.27.lorenz.seq;
0.27.lorenz.path;
0.27.lorenz.cycle;
::
